// <auto-generated />
using System;
using ContosoUniversity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContosoUniversity.Migrations
{
    [DbContext(typeof(FlexiblePROPContext))]
    [Migration("20210427165308_cambios-menores")]
    partial class cambiosmenores
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContosoUniversity.Models.Anomalia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Anomalias");
                });

            modelBuilder.Entity("ContosoUniversity.Models.AreaPropiedad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadEspacio")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PropiedadID")
                        .HasColumnType("int");

                    b.Property<int>("UnidadID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PropiedadID");

                    b.HasIndex("UnidadID");

                    b.ToTable("AreasPropiedades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.AvanceConstruccion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PorcentajeAvance")
                        .HasColumnType("decimal(3,2)");

                    b.Property<int>("PropiedadID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PropiedadID");

                    b.ToTable("AvancesConstruccion");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Ciudad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaisID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PaisID");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Calle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Casado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Edificio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Numero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PaisID")
                        .HasColumnType("int");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RolClienteID")
                        .HasColumnType("int");

                    b.Property<int?>("SectorID")
                        .HasColumnType("int");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("PaisID");

                    b.HasIndex("RolClienteID");

                    b.HasIndex("SectorID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Compania", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GrupoCompaniaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GrupoCompaniaID");

                    b.ToTable("Companias");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Configuracion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DesdeFecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HastaFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modulo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Valor2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Contrato", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFirma")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Firmado")
                        .HasColumnType("bit");

                    b.Property<bool>("Legalizado")
                        .HasColumnType("bit");

                    b.Property<int>("PropiedadID")
                        .HasColumnType("int");

                    b.Property<int>("TipoContratoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PropiedadID");

                    b.HasIndex("TipoContratoID");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("ContosoUniversity.Models.ConversionMoneda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("FactorConversion")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("FechaConversion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MonedaDestinoID")
                        .HasColumnType("int");

                    b.Property<int?>("MonedaOrigenID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MonedaDestinoID");

                    b.HasIndex("MonedaOrigenID");

                    b.ToTable("ConversionesMonedas");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CourseID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Budget")
                        .HasColumnType("money");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Dependiente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Casado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ParentescoID")
                        .HasColumnType("int");

                    b.Property<int>("PropietarioID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("ParentescoID");

                    b.ToTable("Dependientes");
                });

            modelBuilder.Entity("ContosoUniversity.Models.DetalleNacionalidad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NacionalidadID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("NacionalidadID");

                    b.ToTable("DocumentosNacionales");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("ContosoUniversity.Models.EquipoPropiedad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreImagen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PropiedadID")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("PropiedadID");

                    b.ToTable("EquiposPropiedad");
                });

            modelBuilder.Entity("ContosoUniversity.Models.EstadoPropiedad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("EstadoPropiedad");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Factura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BalanceActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("CodigoFactura")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Emisor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("LecturaFinal")
                        .HasColumnType("int");

                    b.Property<int>("LecturaInicial")
                        .HasColumnType("int");

                    b.Property<string>("Moneda")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PropietarioVilla")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Villa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ContosoUniversity.Models.GrupoCompania", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("GruposCompania");
                });

            modelBuilder.Entity("ContosoUniversity.Models.GrupoPropiedad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("GruposPropiedades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.ImagenPropiedad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreImagen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PropiedadID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PropiedadID");

                    b.ToTable("ImagenesPropiedades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Inmobiliaria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Inmobiliarias");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Itinerario", b =>
                {
                    b.Property<int>("LectorID")
                        .HasColumnType("int");

                    b.Property<int>("MedidorID")
                        .HasColumnType("int");

                    b.Property<int>("OrdenLectura")
                        .HasColumnType("int");

                    b.Property<int>("RutaID")
                        .HasColumnType("int");

                    b.HasKey("LectorID", "MedidorID");

                    b.HasIndex("MedidorID");

                    b.HasIndex("RutaID");

                    b.ToTable("Itinerarios");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Lector", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreEmpresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Lectores");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Lectura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnomaliaID")
                        .HasColumnType("int");

                    b.Property<int>("ConsumoFacturado")
                        .HasColumnType("int");

                    b.Property<bool>("EstaFacturado")
                        .HasColumnType("bit");

                    b.Property<int?>("FacturaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaProgramada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaReal")
                        .HasColumnType("datetime2");

                    b.Property<string>("Latitud")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LectorID")
                        .HasColumnType("int");

                    b.Property<int>("LecturaAnterior")
                        .HasColumnType("int");

                    b.Property<int>("LecturaTomada")
                        .HasColumnType("int");

                    b.Property<string>("Longitud")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MedidorID")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notas")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrdenLectura")
                        .HasColumnType("int");

                    b.Property<int>("PropiedaID")
                        .HasColumnType("int");

                    b.Property<int?>("PropiedadID")
                        .HasColumnType("int");

                    b.Property<int>("RutaID")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AnomaliaID");

                    b.HasIndex("FacturaID");

                    b.HasIndex("LectorID");

                    b.HasIndex("MedidorID");

                    b.HasIndex("PropiedadID");

                    b.HasIndex("RutaID");

                    b.ToTable("Lecturas");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Medidor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaInstalacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("LecturaInstalacion")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notas")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PropiedadID")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoMedidorID")
                        .HasColumnType("int");

                    b.Property<int>("UltimaLectura")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PropiedadID");

                    b.HasIndex("TipoMedidorID");

                    b.ToTable("Medidores");
                });

            modelBuilder.Entity("ContosoUniversity.Models.MedioComunicacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompaniaID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("CompaniaID");

                    b.ToTable("MediosComunicacion");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Moneda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Municipio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CiudadID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("CiudadID");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Nacionalidad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Nacionalidades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InstructorID");

                    b.ToTable("OfficeAssignments");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Pais", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Parentesco", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Parentesco");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Prestamo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BalanceActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Beneficiario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CantidadCuotas")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPrestamo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Emisor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Tasa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorCuotas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPrestamo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Propiedad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Comision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ComisionRenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Constructora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("CostoConstruccion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DireccionEnProyecto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DisponibleParaRenta")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoPropiedadID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntregaReal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntregaTitulo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinConstruccion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioConstruccion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPropiedad")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Latitud")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitud")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MetrosConstruccion")
                        .HasColumnType("int");

                    b.Property<int?>("MonedaID")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PrecioLista")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioRentaDiario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PropietarioID")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPropiedadID")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadID")
                        .HasColumnType("int");

                    b.Property<int?>("VendedorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EstadoPropiedadID");

                    b.HasIndex("MonedaID");

                    b.HasIndex("PropietarioID");

                    b.HasIndex("TipoPropiedadID");

                    b.HasIndex("UnidadID");

                    b.HasIndex("VendedorID");

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.RolCliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("RolesClientes");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Ruta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DiaLectura")
                        .HasColumnType("int");

                    b.Property<int>("TipoRutaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipoRutaID");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Sector", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MunicipioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MunicipioID");

                    b.ToTable("Sectores");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Seguro", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonedaID")
                        .HasColumnType("int");

                    b.Property<int>("PropiedadID")
                        .HasColumnType("int");

                    b.Property<int>("TipoSeguroID")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAsegurado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("VigenciaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VigenciaHasta")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MonedaID");

                    b.HasIndex("PropiedadID");

                    b.HasIndex("TipoSeguroID");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TemaPendiente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Estatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaReporte")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadID")
                        .HasColumnType("int");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoContratoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PropiedadID");

                    b.HasIndex("TipoContratoID");

                    b.ToTable("TemasPendientes");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoContrato", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("TiposContrato");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoMedidor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("TiposMedidores");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoPropiedad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GrupoPropiedadID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GrupoPropiedadID");

                    b.ToTable("TiposPropiedades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoRuta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("TiposRutas");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoSeguro", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("TiposSeguro");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Unidad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Vendedor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InmobiliariaID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreEmpresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("InmobiliariaID");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.Property<int>("CoursesCourseID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorsID")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourseID", "InstructorsID");

                    b.HasIndex("InstructorsID");

                    b.ToTable("CourseInstructor");
                });

            modelBuilder.Entity("ContosoUniversity.Models.AreaPropiedad", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany("AreasPropiedad")
                        .HasForeignKey("PropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Unidad", "UnidadEspacio")
                        .WithMany()
                        .HasForeignKey("UnidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");

                    b.Navigation("UnidadEspacio");
                });

            modelBuilder.Entity("ContosoUniversity.Models.AvanceConstruccion", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany("AvancesConstruccion")
                        .HasForeignKey("PropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Ciudad", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Pais", "Pais")
                        .WithMany("Ciudades")
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Cliente", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Pais", "PaisNacimiento")
                        .WithMany()
                        .HasForeignKey("PaisID");

                    b.HasOne("ContosoUniversity.Models.RolCliente", "RolCliente")
                        .WithMany()
                        .HasForeignKey("RolClienteID");

                    b.HasOne("ContosoUniversity.Models.Sector", "SectorDondeVive")
                        .WithMany("Clientes")
                        .HasForeignKey("SectorID");

                    b.Navigation("PaisNacimiento");

                    b.Navigation("RolCliente");

                    b.Navigation("SectorDondeVive");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Compania", b =>
                {
                    b.HasOne("ContosoUniversity.Models.GrupoCompania", "GrupoCompania")
                        .WithMany("Companias")
                        .HasForeignKey("GrupoCompaniaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoCompania");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Contrato", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany("Contratos")
                        .HasForeignKey("PropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.TipoContrato", "TipoContrato")
                        .WithMany("Contratos")
                        .HasForeignKey("TipoContratoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");

                    b.Navigation("TipoContrato");
                });

            modelBuilder.Entity("ContosoUniversity.Models.ConversionMoneda", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Moneda", "MonedaDestino")
                        .WithMany()
                        .HasForeignKey("MonedaDestinoID");

                    b.HasOne("ContosoUniversity.Models.Moneda", "MonedaOrigen")
                        .WithMany()
                        .HasForeignKey("MonedaOrigenID");

                    b.Navigation("MonedaDestino");

                    b.Navigation("MonedaOrigen");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Course", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Department", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Instructor", "Administrator")
                        .WithMany()
                        .HasForeignKey("InstructorID");

                    b.Navigation("Administrator");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Dependiente", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Cliente", "Cliente")
                        .WithMany("Dependientes")
                        .HasForeignKey("ClienteID");

                    b.HasOne("ContosoUniversity.Models.Parentesco", "Parentesco")
                        .WithMany()
                        .HasForeignKey("ParentescoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Parentesco");
                });

            modelBuilder.Entity("ContosoUniversity.Models.DetalleNacionalidad", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Cliente", "Cliente")
                        .WithMany("Nacionalidades")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Nacionalidad", "Nacionalidad")
                        .WithMany("Cuidadanos")
                        .HasForeignKey("NacionalidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Nacionalidad");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Enrollment", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ContosoUniversity.Models.EquipoPropiedad", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany("Equipos")
                        .HasForeignKey("PropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Factura", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteID");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ContosoUniversity.Models.ImagenPropiedad", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany("Imagenes")
                        .HasForeignKey("PropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Itinerario", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Lector", "Lector")
                        .WithMany("Itinerarios")
                        .HasForeignKey("LectorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Medidor", "Medidor")
                        .WithMany()
                        .HasForeignKey("MedidorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lector");

                    b.Navigation("Medidor");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Lectura", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Anomalia", "Anomalia")
                        .WithMany()
                        .HasForeignKey("AnomaliaID");

                    b.HasOne("ContosoUniversity.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaID");

                    b.HasOne("ContosoUniversity.Models.Lector", "Lector")
                        .WithMany()
                        .HasForeignKey("LectorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Medidor", "Medidor")
                        .WithMany()
                        .HasForeignKey("MedidorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadID");

                    b.HasOne("ContosoUniversity.Models.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anomalia");

                    b.Navigation("Factura");

                    b.Navigation("Lector");

                    b.Navigation("Medidor");

                    b.Navigation("Propiedad");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Medidor", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany("Medidores")
                        .HasForeignKey("PropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.TipoMedidor", "TipoMedidor")
                        .WithMany("Medidores")
                        .HasForeignKey("TipoMedidorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");

                    b.Navigation("TipoMedidor");
                });

            modelBuilder.Entity("ContosoUniversity.Models.MedioComunicacion", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Municipio", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Ciudad", "Ciudad")
                        .WithMany("Municipios")
                        .HasForeignKey("CiudadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("ContosoUniversity.Models.OfficeAssignment", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("ContosoUniversity.Models.OfficeAssignment", "InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Prestamo", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Propiedad", b =>
                {
                    b.HasOne("ContosoUniversity.Models.EstadoPropiedad", "EstadoPropiedad")
                        .WithMany("Propiedades")
                        .HasForeignKey("EstadoPropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Moneda", "MonedaValores")
                        .WithMany()
                        .HasForeignKey("MonedaID");

                    b.HasOne("ContosoUniversity.Models.Cliente", "Propietario")
                        .WithMany("Propiedades")
                        .HasForeignKey("PropietarioID");

                    b.HasOne("ContosoUniversity.Models.TipoPropiedad", "TipoPropiedad")
                        .WithMany("Propiedades")
                        .HasForeignKey("TipoPropiedadID");

                    b.HasOne("ContosoUniversity.Models.Unidad", "UnidadEspacio")
                        .WithMany()
                        .HasForeignKey("UnidadID");

                    b.HasOne("ContosoUniversity.Models.Vendedor", "Vendedor")
                        .WithMany("PropiedadesVendidas")
                        .HasForeignKey("VendedorID");

                    b.Navigation("EstadoPropiedad");

                    b.Navigation("MonedaValores");

                    b.Navigation("Propietario");

                    b.Navigation("TipoPropiedad");

                    b.Navigation("UnidadEspacio");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Ruta", b =>
                {
                    b.HasOne("ContosoUniversity.Models.TipoRuta", "TipoRuta")
                        .WithMany("Rutas")
                        .HasForeignKey("TipoRutaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoRuta");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Sector", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Municipio", "Municipio")
                        .WithMany("Sectores")
                        .HasForeignKey("MunicipioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Seguro", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Moneda", "MonedaValorAsegurado")
                        .WithMany()
                        .HasForeignKey("MonedaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany("Seguros")
                        .HasForeignKey("PropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.TipoSeguro", "TipoSeguro")
                        .WithMany("Seguros")
                        .HasForeignKey("TipoSeguroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonedaValorAsegurado");

                    b.Navigation("Propiedad");

                    b.Navigation("TipoSeguro");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TemaPendiente", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Propiedad", "Propiedad")
                        .WithMany("TemasPendiente")
                        .HasForeignKey("PropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("TipoContratoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");

                    b.Navigation("TipoContrato");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoPropiedad", b =>
                {
                    b.HasOne("ContosoUniversity.Models.GrupoPropiedad", "GrupoPropiedad")
                        .WithMany()
                        .HasForeignKey("GrupoPropiedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoPropiedad");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Vendedor", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Inmobiliaria", "Inmobiliaria")
                        .WithMany()
                        .HasForeignKey("InmobiliariaID");

                    b.Navigation("Inmobiliaria");
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContosoUniversity.Models.Ciudad", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Cliente", b =>
                {
                    b.Navigation("Dependientes");

                    b.Navigation("Facturas");

                    b.Navigation("Nacionalidades");

                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Department", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("ContosoUniversity.Models.EstadoPropiedad", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.GrupoCompania", b =>
                {
                    b.Navigation("Companias");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Instructor", b =>
                {
                    b.Navigation("OfficeAssignment");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Lector", b =>
                {
                    b.Navigation("Itinerarios");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Municipio", b =>
                {
                    b.Navigation("Sectores");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Nacionalidad", b =>
                {
                    b.Navigation("Cuidadanos");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Pais", b =>
                {
                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Propiedad", b =>
                {
                    b.Navigation("AreasPropiedad");

                    b.Navigation("AvancesConstruccion");

                    b.Navigation("Contratos");

                    b.Navigation("Equipos");

                    b.Navigation("Imagenes");

                    b.Navigation("Medidores");

                    b.Navigation("Seguros");

                    b.Navigation("TemasPendiente");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Sector", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoContrato", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoMedidor", b =>
                {
                    b.Navigation("Medidores");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoPropiedad", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoRuta", b =>
                {
                    b.Navigation("Rutas");
                });

            modelBuilder.Entity("ContosoUniversity.Models.TipoSeguro", b =>
                {
                    b.Navigation("Seguros");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Vendedor", b =>
                {
                    b.Navigation("PropiedadesVendidas");
                });
#pragma warning restore 612, 618
        }
    }
}
